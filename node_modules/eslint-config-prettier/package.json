{
  "_args": [
    [
      {
        "raw": "eslint-config-prettier@git+https://github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
        "scope": null,
        "escapedName": "eslint-config-prettier",
        "name": "eslint-config-prettier",
        "rawSpec": "git+https://github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
        "spec": "git+https://github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
          "sshUrl": "git+ssh://git@github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
          "httpsUrl": "git+https://github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
          "gitUrl": "git://github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
          "shortcut": "github:nfriedly/eslint-config-prettier#nfriedly-patch-1",
          "directUrl": "https://raw.githubusercontent.com/nfriedly/eslint-config-prettier/nfriedly-patch-1/package.json"
        }
      },
      "/media/drv40g/prj/p170421_hackathon_ibmbluemix_nlp/repo_break-thru"
    ]
  ],
  "_from": "git+https://github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
  "_id": "eslint-config-prettier@1.0.2",
  "_inCache": true,
  "_location": "/eslint-config-prettier",
  "_phantomChildren": {},
  "_requested": {
    "raw": "eslint-config-prettier@git+https://github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
    "scope": null,
    "escapedName": "eslint-config-prettier",
    "name": "eslint-config-prettier",
    "rawSpec": "git+https://github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
    "spec": "git+https://github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
      "sshUrl": "git+ssh://git@github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
      "httpsUrl": "git+https://github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
      "gitUrl": "git://github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
      "shortcut": "github:nfriedly/eslint-config-prettier#nfriedly-patch-1",
      "directUrl": "https://raw.githubusercontent.com/nfriedly/eslint-config-prettier/nfriedly-patch-1/package.json"
    }
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "git+https://github.com/nfriedly/eslint-config-prettier.git#7bc0523bdec9642281ee6f345746a2dbb2d86e3b",
  "_shasum": "c23bc377c5ca02b574e149956dab60ed01c9b30f",
  "_shrinkwrap": null,
  "_spec": "eslint-config-prettier@git+https://github.com/nfriedly/eslint-config-prettier.git#nfriedly-patch-1",
  "_where": "/media/drv40g/prj/p170421_hackathon_ibmbluemix_nlp/repo_break-thru",
  "author": {
    "name": "Simon Lydell"
  },
  "bin": {
    "eslint-config-prettier-check": "cli.js"
  },
  "bugs": {
    "url": "https://github.com/lydell/eslint-config-prettier/issues"
  },
  "dependencies": {
    "get-stdin": "^5.0.1"
  },
  "description": "Turns all rules that are unnecessary or might conflict with prettier off.",
  "devDependencies": {
    "eslint": ">=3.14.1",
    "eslint-config-google": "^0.7.1",
    "eslint-plugin-prettier": "^2.0.0",
    "eslint-plugin-react": "^6.9.0",
    "prettier": "^0.14.1"
  },
  "files": [
    "cli.js",
    "rules"
  ],
  "gitHead": "7bc0523bdec9642281ee6f345746a2dbb2d86e3b",
  "homepage": "https://github.com/lydell/eslint-config-prettier#readme",
  "keywords": [
    "eslint",
    "eslintconfig",
    "prettier"
  ],
  "license": "MIT",
  "main": "rules/core.js",
  "name": "eslint-config-prettier",
  "optionalDependencies": {},
  "peerDependencies": {
    "eslint": ">=3.14.1"
  },
  "readme": "# eslint-config-prettier [![Build Status][travis-badge]][travis]\n\nTurns all rules that are unnecessary or might conflict with [prettier] off.\n\nThis let’s you use you favorite shareable config without letting its stylistic\nchoices get in the way when using prettier.\n\nIntended to be used together with [eslint-plugin-prettier].\n\n## Installation\n\nFirst, install [eslint-plugin-prettier]. Follow the instructions over there.\n\nThen, install eslint-config-prettier:\n\n```\n$ npm install --save-dev eslint-config-prettier\n```\n\nFinally, add eslint-config-prettier to the \"extends\" array in your `.eslintrc.*`\nfile. Make sure to put it **last,** so it gets the chance to override other\nconfigs.\n\n```json\n{\n  \"extends\": [\n    \"prettier\"\n  ]\n}\n```\n\nIf you use [React] and [eslint-plugin-react], there are exclusions for those\nrules as well:\n\n```json\n{\n  \"extends\": [\n    \"prettier\",\n    \"prettier/react\"\n  ]\n}\n```\n\nDo you know of some other eslint plugin that contains rules that\neslint-plugin-prettier could turn off? Send a pull request!\n\n## CLI helper tool\n\neslint-config-prettier also ships with a little CLI tool to help you check if\nyour configuration contains any rules that are unnecessary or conflict with\nprettier.\n\nFirst, add a script for it to package.json:\n\n```json\n{\n  \"scripts\": {\n    \"eslint-check\": \"eslint --print-config .eslintrc.js | eslint-config-prettier-check\"\n  }\n}\n```\n\nThen run `npm run eslint-check`.\n\n(Swap out .eslintrc.js with the path to your config if needed.)\n\n## Example configuration\n\n```json\n{\n  \"extends\": [\n    \"google\",\n    \"plugin:react/all\",\n    \"prettier\",\n    \"prettier/react\"\n  ],\n  \"plugins\": [\n    \"react\",\n    \"prettier\"\n  ],\n  \"parserOptions\": {\n    \"ecmaVersion\": 2016,\n    \"sourceType\": \"module\",\n    \"ecmaFeatures\": {\n      \"jsx\": true\n    }\n  },\n  \"env\": {\n    \"es6\": true,\n    \"node\": true\n  },\n  \"rules\": {\n    \"prettier/prettier\": \"error\"\n  }\n}\n```\n\n## Exceptions\n\nThere a few rules that eslint-config-prettier disables that actually can be\nenabled in some cases.\n\n### [max-len]\n\nUsually, prettier takes care of following a maximum line length automatically.\nHowever, there are cases where prettier can’t do anything, such as for long\nstrings, regular expressions and comments. Those need to be split up by a human.\n\nIf you’d like to enforce an even stricter maximum line length policy than\nprettier can provide automatically, you can enable this rule. Just remember to\nkeep `max-len`’s options and prettier’s `printWidth` option in sync.\n\nExample configuration:\n\n```json\n{\n  \"rules\": {\n    \"max-len\": [\"error\", {\"code\": 80, \"ignoreUrls\": true}]\n  }\n}\n```\n\n### [no-mixed-operators]\n\nThis rule forbids mixing certain operators, such as `&&` and `||`.\n\nFor example, the rule could warn about this line:\n\n```js\nvar foo = a && b || c;\n```\n\nThe rule suggests adding parentheses, like this:\n\n```js\nvar foo = (a && b) || c;\n```\n\nHowever, prettier prints the minimum amount of parentheses technically needed,\nturning it back to:\n\n```js\nvar foo = a && b || c;\n```\n\nIf you want to use this rule with prettier, you need to split the expression\ninto another variable:\n\n```js\nvar bar = a && b;\nvar foo = bar || c;\n```\n\nExample configuration:\n\n```json\n{\n  \"rules\": {\n    \"no-mixed-operators\": \"error\"\n  }\n}\n```\n\n### [quotes]\n\nIf you’d like to enforce the use of backticks rather than single or double\nquotes for strings, you can enable this rule. Otherwise, there’s no need to.\nJust remember to enable the `\"backtick\"` option!\n\nExample configuration:\n\n```json\n{\n  \"rules\": {\n    \"quotes\": [\"error\", \"backtick\"]\n  }\n}\n```\n\n## License\n\n[MIT](LICENSE).\n\n[eslint-plugin-prettier]: https://github.com/not-an-aardvark/eslint-plugin-prettier\n[eslint-plugin-react]: https://github.com/yannickcr/eslint-plugin-react\n[max-len]: http://eslint.org/docs/rules/max-len\n[no-mixed-operators]: http://eslint.org/docs/rules/no-mixed-operators\n[prettier]: https://github.com/jlongster/prettier\n[quotes]: http://eslint.org/docs/rules/quotes\n[React]: https://facebook.github.io/react/\n[travis-badge]: https://travis-ci.org/lydell/eslint-config-prettier.svg?branch=master\n[travis]: https://travis-ci.org/lydell/eslint-config-prettier\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lydell/eslint-config-prettier.git"
  },
  "scripts": {
    "test": "eslint ."
  },
  "version": "1.0.2"
}
